import * as assert from 'assert'

export default function(pp) ::
  assert.throws @ pp.packPacket

  const asPkt = (body, header) => pp.packPacket @:
    id_router: 0xaaaaaaaa
    body: body
    header: header || ''

  if 1 ::
    const buf = asPkt @ 'body', 'header'
    const ans = pp.parseHeader @ buf
    console.log @
    console.dir @ ans, @: colors: true, showHidden: true
    console.log @ buf.byteLength
    console.log @ buf
    console.log @

  if 1 ::
    const feed = pp.packetStream()
    let mz = @#
      asPkt @ '', ''
      asPkt @ 'A', 'BBB'
      asPkt @ 'CC', 'DDDDD'
      asPkt @ 'EEEE', 'FFFFFFFF'

    console.log @ mz.map @ e => Buffer.from(e)
    mz = pp.concatBuffers @ mz
    console.log @ Buffer.from @ mz
    log_complete @ 'Multiple:', feed @ mz


  function log_complete(prefix, complete) ::
    complete.forEach @ e => ::
      e.body = e.body_utf8()
      e.header = e.header_utf8()

    console.log @ `\n${prefix}`
    console.dir @ complete, @: colors: true
    return complete

