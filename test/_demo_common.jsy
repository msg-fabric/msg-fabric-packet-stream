export default function(pp) ::
  const asMsg = (body, header) => pp.packMessage @:
    id_router: 0xaaaaaaaa
    body: body
    header: header || ''

  if 1 ::
    const buf = asMsg @ 'body', 'header'
    const ans = pp.parseHeader @ buf
    console.log @
    console.dir @ ans, @: colors: true, showHidden: true
    console.log @ buf.byteLength
    console.log @ buf
    console.log @

  if 1 ::
    const feed = pp.packetStream()
    let mz = @#
      asMsg @ '', ''
      asMsg @ 'A', 'BBB'
      asMsg @ 'CC', 'DDDDD'
      asMsg @ 'EEEE', 'FFFFFFFF'

    console.log @ mz.map @ e => Buffer.from(e)
    mz = pp.concatBuffers @ mz
    console.log @ Buffer.from @ mz
    log_complete @ 'Multiple:', feed @ mz


  function log_complete(prefix, complete) ::
    complete.forEach @ e => ::
      e.body = Buffer(e.sliceBody()).toString()
      e.header = Buffer(e.sliceHeader()).toString()

    console.log @ `\n${prefix}`
    console.dir @ complete, @: colors: true
    return complete

